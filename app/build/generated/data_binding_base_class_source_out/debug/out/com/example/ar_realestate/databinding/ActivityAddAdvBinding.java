// Generated by view binder compiler. Do not edit!
package com.example.ar_realestate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ar_realestate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddAdvBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addAdvBtnSubmit;

  @NonNull
  public final EditText addAdvEditTextAddress;

  @NonNull
  public final EditText addAdvEditTextAdvTitle;

  @NonNull
  public final EditText addAdvEditTextBuildAge;

  @NonNull
  public final EditText addAdvEditTextBuildingFloors;

  @NonNull
  public final TextView addAdvEditTextDate;

  @NonNull
  public final EditText addAdvEditTextDues;

  @NonNull
  public final EditText addAdvEditTextFloorLoc;

  @NonNull
  public final EditText addAdvEditTextNumOfBath;

  @NonNull
  public final EditText addAdvEditTextPrice;

  @NonNull
  public final EditText addAdvEditTextRentalIncome;

  @NonNull
  public final EditText addAdvEditTextSquareMeter;

  @NonNull
  public final Spinner addAdvSpinnerAdvStatus;

  @NonNull
  public final Spinner addAdvSpinnerBuildType;

  @NonNull
  public final Spinner addAdvSpinnerCity;

  @NonNull
  public final Spinner addAdvSpinnerElgCredit;

  @NonNull
  public final Spinner addAdvSpinnerFront;

  @NonNull
  public final Spinner addAdvSpinnerFuelType;

  @NonNull
  public final Spinner addAdvSpinnerItemStatus;

  @NonNull
  public final Spinner addAdvSpinnerRoomNum;

  @NonNull
  public final Spinner addAdvSpinnerStateBuilding;

  @NonNull
  public final Spinner addAdvSpinnerSwap;

  @NonNull
  public final Spinner addAdvSpinnerTown;

  @NonNull
  public final Spinner addAdvSpinnerUsingStatus;

  @NonNull
  public final Spinner addAdvSpinnerWarmType;

  @NonNull
  public final TextView addAdvTextAddress;

  @NonNull
  public final TextView addAdvTextAdvStatus;

  @NonNull
  public final TextView addAdvTextBuildAge;

  @NonNull
  public final TextView addAdvTextBuildType;

  @NonNull
  public final TextView addAdvTextBuildingFloors;

  @NonNull
  public final TextView addAdvTextCity;

  @NonNull
  public final TextView addAdvTextDate;

  @NonNull
  public final TextView addAdvTextDues;

  @NonNull
  public final TextView addAdvTextElgForCredit;

  @NonNull
  public final TextView addAdvTextFloorLoc;

  @NonNull
  public final TextView addAdvTextFront;

  @NonNull
  public final TextView addAdvTextFuelType;

  @NonNull
  public final TextView addAdvTextItemStatus;

  @NonNull
  public final TextView addAdvTextNumOfBath;

  @NonNull
  public final TextView addAdvTextPrice;

  @NonNull
  public final TextView addAdvTextRentalIncome;

  @NonNull
  public final TextView addAdvTextRoomNum;

  @NonNull
  public final TextView addAdvTextSquareMeter;

  @NonNull
  public final TextView addAdvTextStateBuilding;

  @NonNull
  public final TextView addAdvTextSwap;

  @NonNull
  public final TextView addAdvTextTown;

  @NonNull
  public final TextView addAdvTextUsingStatus;

  @NonNull
  public final TextView addAdvTextWarmType;

  @NonNull
  public final ImageView addBookActivityImageViewBookImage;

  private ActivityAddAdvBinding(@NonNull ScrollView rootView, @NonNull Button addAdvBtnSubmit,
      @NonNull EditText addAdvEditTextAddress, @NonNull EditText addAdvEditTextAdvTitle,
      @NonNull EditText addAdvEditTextBuildAge, @NonNull EditText addAdvEditTextBuildingFloors,
      @NonNull TextView addAdvEditTextDate, @NonNull EditText addAdvEditTextDues,
      @NonNull EditText addAdvEditTextFloorLoc, @NonNull EditText addAdvEditTextNumOfBath,
      @NonNull EditText addAdvEditTextPrice, @NonNull EditText addAdvEditTextRentalIncome,
      @NonNull EditText addAdvEditTextSquareMeter, @NonNull Spinner addAdvSpinnerAdvStatus,
      @NonNull Spinner addAdvSpinnerBuildType, @NonNull Spinner addAdvSpinnerCity,
      @NonNull Spinner addAdvSpinnerElgCredit, @NonNull Spinner addAdvSpinnerFront,
      @NonNull Spinner addAdvSpinnerFuelType, @NonNull Spinner addAdvSpinnerItemStatus,
      @NonNull Spinner addAdvSpinnerRoomNum, @NonNull Spinner addAdvSpinnerStateBuilding,
      @NonNull Spinner addAdvSpinnerSwap, @NonNull Spinner addAdvSpinnerTown,
      @NonNull Spinner addAdvSpinnerUsingStatus, @NonNull Spinner addAdvSpinnerWarmType,
      @NonNull TextView addAdvTextAddress, @NonNull TextView addAdvTextAdvStatus,
      @NonNull TextView addAdvTextBuildAge, @NonNull TextView addAdvTextBuildType,
      @NonNull TextView addAdvTextBuildingFloors, @NonNull TextView addAdvTextCity,
      @NonNull TextView addAdvTextDate, @NonNull TextView addAdvTextDues,
      @NonNull TextView addAdvTextElgForCredit, @NonNull TextView addAdvTextFloorLoc,
      @NonNull TextView addAdvTextFront, @NonNull TextView addAdvTextFuelType,
      @NonNull TextView addAdvTextItemStatus, @NonNull TextView addAdvTextNumOfBath,
      @NonNull TextView addAdvTextPrice, @NonNull TextView addAdvTextRentalIncome,
      @NonNull TextView addAdvTextRoomNum, @NonNull TextView addAdvTextSquareMeter,
      @NonNull TextView addAdvTextStateBuilding, @NonNull TextView addAdvTextSwap,
      @NonNull TextView addAdvTextTown, @NonNull TextView addAdvTextUsingStatus,
      @NonNull TextView addAdvTextWarmType, @NonNull ImageView addBookActivityImageViewBookImage) {
    this.rootView = rootView;
    this.addAdvBtnSubmit = addAdvBtnSubmit;
    this.addAdvEditTextAddress = addAdvEditTextAddress;
    this.addAdvEditTextAdvTitle = addAdvEditTextAdvTitle;
    this.addAdvEditTextBuildAge = addAdvEditTextBuildAge;
    this.addAdvEditTextBuildingFloors = addAdvEditTextBuildingFloors;
    this.addAdvEditTextDate = addAdvEditTextDate;
    this.addAdvEditTextDues = addAdvEditTextDues;
    this.addAdvEditTextFloorLoc = addAdvEditTextFloorLoc;
    this.addAdvEditTextNumOfBath = addAdvEditTextNumOfBath;
    this.addAdvEditTextPrice = addAdvEditTextPrice;
    this.addAdvEditTextRentalIncome = addAdvEditTextRentalIncome;
    this.addAdvEditTextSquareMeter = addAdvEditTextSquareMeter;
    this.addAdvSpinnerAdvStatus = addAdvSpinnerAdvStatus;
    this.addAdvSpinnerBuildType = addAdvSpinnerBuildType;
    this.addAdvSpinnerCity = addAdvSpinnerCity;
    this.addAdvSpinnerElgCredit = addAdvSpinnerElgCredit;
    this.addAdvSpinnerFront = addAdvSpinnerFront;
    this.addAdvSpinnerFuelType = addAdvSpinnerFuelType;
    this.addAdvSpinnerItemStatus = addAdvSpinnerItemStatus;
    this.addAdvSpinnerRoomNum = addAdvSpinnerRoomNum;
    this.addAdvSpinnerStateBuilding = addAdvSpinnerStateBuilding;
    this.addAdvSpinnerSwap = addAdvSpinnerSwap;
    this.addAdvSpinnerTown = addAdvSpinnerTown;
    this.addAdvSpinnerUsingStatus = addAdvSpinnerUsingStatus;
    this.addAdvSpinnerWarmType = addAdvSpinnerWarmType;
    this.addAdvTextAddress = addAdvTextAddress;
    this.addAdvTextAdvStatus = addAdvTextAdvStatus;
    this.addAdvTextBuildAge = addAdvTextBuildAge;
    this.addAdvTextBuildType = addAdvTextBuildType;
    this.addAdvTextBuildingFloors = addAdvTextBuildingFloors;
    this.addAdvTextCity = addAdvTextCity;
    this.addAdvTextDate = addAdvTextDate;
    this.addAdvTextDues = addAdvTextDues;
    this.addAdvTextElgForCredit = addAdvTextElgForCredit;
    this.addAdvTextFloorLoc = addAdvTextFloorLoc;
    this.addAdvTextFront = addAdvTextFront;
    this.addAdvTextFuelType = addAdvTextFuelType;
    this.addAdvTextItemStatus = addAdvTextItemStatus;
    this.addAdvTextNumOfBath = addAdvTextNumOfBath;
    this.addAdvTextPrice = addAdvTextPrice;
    this.addAdvTextRentalIncome = addAdvTextRentalIncome;
    this.addAdvTextRoomNum = addAdvTextRoomNum;
    this.addAdvTextSquareMeter = addAdvTextSquareMeter;
    this.addAdvTextStateBuilding = addAdvTextStateBuilding;
    this.addAdvTextSwap = addAdvTextSwap;
    this.addAdvTextTown = addAdvTextTown;
    this.addAdvTextUsingStatus = addAdvTextUsingStatus;
    this.addAdvTextWarmType = addAdvTextWarmType;
    this.addBookActivityImageViewBookImage = addBookActivityImageViewBookImage;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddAdvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddAdvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_adv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddAdvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAdv_btnSubmit;
      Button addAdvBtnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (addAdvBtnSubmit == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextAddress;
      EditText addAdvEditTextAddress = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextAddress == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextAdvTitle;
      EditText addAdvEditTextAdvTitle = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextAdvTitle == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextBuildAge;
      EditText addAdvEditTextBuildAge = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextBuildAge == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextBuildingFloors;
      EditText addAdvEditTextBuildingFloors = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextBuildingFloors == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextDate;
      TextView addAdvEditTextDate = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextDate == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextDues;
      EditText addAdvEditTextDues = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextDues == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextFloorLoc;
      EditText addAdvEditTextFloorLoc = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextFloorLoc == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextNumOfBath;
      EditText addAdvEditTextNumOfBath = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextNumOfBath == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextPrice;
      EditText addAdvEditTextPrice = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextPrice == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextRentalIncome;
      EditText addAdvEditTextRentalIncome = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextRentalIncome == null) {
        break missingId;
      }

      id = R.id.addAdv_editTextSquareMeter;
      EditText addAdvEditTextSquareMeter = ViewBindings.findChildViewById(rootView, id);
      if (addAdvEditTextSquareMeter == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerAdvStatus;
      Spinner addAdvSpinnerAdvStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerAdvStatus == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerBuildType;
      Spinner addAdvSpinnerBuildType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerBuildType == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerCity;
      Spinner addAdvSpinnerCity = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerCity == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerElgCredit;
      Spinner addAdvSpinnerElgCredit = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerElgCredit == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerFront;
      Spinner addAdvSpinnerFront = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerFront == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerFuelType;
      Spinner addAdvSpinnerFuelType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerFuelType == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerItemStatus;
      Spinner addAdvSpinnerItemStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerItemStatus == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerRoomNum;
      Spinner addAdvSpinnerRoomNum = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerRoomNum == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerStateBuilding;
      Spinner addAdvSpinnerStateBuilding = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerStateBuilding == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerSwap;
      Spinner addAdvSpinnerSwap = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerSwap == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerTown;
      Spinner addAdvSpinnerTown = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerTown == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerUsingStatus;
      Spinner addAdvSpinnerUsingStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerUsingStatus == null) {
        break missingId;
      }

      id = R.id.addAdv_spinnerWarmType;
      Spinner addAdvSpinnerWarmType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvSpinnerWarmType == null) {
        break missingId;
      }

      id = R.id.add_adv_TextAddress;
      TextView addAdvTextAddress = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextAddress == null) {
        break missingId;
      }

      id = R.id.add_adv_TextAdvStatus;
      TextView addAdvTextAdvStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextAdvStatus == null) {
        break missingId;
      }

      id = R.id.add_adv_TextBuildAge;
      TextView addAdvTextBuildAge = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextBuildAge == null) {
        break missingId;
      }

      id = R.id.add_adv_TextBuildType;
      TextView addAdvTextBuildType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextBuildType == null) {
        break missingId;
      }

      id = R.id.add_adv_TextBuildingFloors;
      TextView addAdvTextBuildingFloors = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextBuildingFloors == null) {
        break missingId;
      }

      id = R.id.add_adv_TextCity;
      TextView addAdvTextCity = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextCity == null) {
        break missingId;
      }

      id = R.id.add_adv_TextDate;
      TextView addAdvTextDate = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextDate == null) {
        break missingId;
      }

      id = R.id.add_adv_TextDues;
      TextView addAdvTextDues = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextDues == null) {
        break missingId;
      }

      id = R.id.add_adv_TextElgForCredit;
      TextView addAdvTextElgForCredit = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextElgForCredit == null) {
        break missingId;
      }

      id = R.id.add_adv_TextFloorLoc;
      TextView addAdvTextFloorLoc = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextFloorLoc == null) {
        break missingId;
      }

      id = R.id.add_adv_TextFront;
      TextView addAdvTextFront = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextFront == null) {
        break missingId;
      }

      id = R.id.add_adv_TextFuelType;
      TextView addAdvTextFuelType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextFuelType == null) {
        break missingId;
      }

      id = R.id.add_adv_TextItemStatus;
      TextView addAdvTextItemStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextItemStatus == null) {
        break missingId;
      }

      id = R.id.add_adv_TextNumOfBath;
      TextView addAdvTextNumOfBath = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextNumOfBath == null) {
        break missingId;
      }

      id = R.id.add_adv_TextPrice;
      TextView addAdvTextPrice = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextPrice == null) {
        break missingId;
      }

      id = R.id.add_adv_TextRentalIncome;
      TextView addAdvTextRentalIncome = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextRentalIncome == null) {
        break missingId;
      }

      id = R.id.addAdv_TextRoomNum;
      TextView addAdvTextRoomNum = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextRoomNum == null) {
        break missingId;
      }

      id = R.id.add_adv_TextSquareMeter;
      TextView addAdvTextSquareMeter = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextSquareMeter == null) {
        break missingId;
      }

      id = R.id.add_adv_TextStateBuilding;
      TextView addAdvTextStateBuilding = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextStateBuilding == null) {
        break missingId;
      }

      id = R.id.add_adv_TextSwap;
      TextView addAdvTextSwap = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextSwap == null) {
        break missingId;
      }

      id = R.id.add_adv_TextTown;
      TextView addAdvTextTown = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextTown == null) {
        break missingId;
      }

      id = R.id.add_adv_TextUsingStatus;
      TextView addAdvTextUsingStatus = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextUsingStatus == null) {
        break missingId;
      }

      id = R.id.add_adv_TextWarmType;
      TextView addAdvTextWarmType = ViewBindings.findChildViewById(rootView, id);
      if (addAdvTextWarmType == null) {
        break missingId;
      }

      id = R.id.add_book_activity_imageViewBookImage;
      ImageView addBookActivityImageViewBookImage = ViewBindings.findChildViewById(rootView, id);
      if (addBookActivityImageViewBookImage == null) {
        break missingId;
      }

      return new ActivityAddAdvBinding((ScrollView) rootView, addAdvBtnSubmit,
          addAdvEditTextAddress, addAdvEditTextAdvTitle, addAdvEditTextBuildAge,
          addAdvEditTextBuildingFloors, addAdvEditTextDate, addAdvEditTextDues,
          addAdvEditTextFloorLoc, addAdvEditTextNumOfBath, addAdvEditTextPrice,
          addAdvEditTextRentalIncome, addAdvEditTextSquareMeter, addAdvSpinnerAdvStatus,
          addAdvSpinnerBuildType, addAdvSpinnerCity, addAdvSpinnerElgCredit, addAdvSpinnerFront,
          addAdvSpinnerFuelType, addAdvSpinnerItemStatus, addAdvSpinnerRoomNum,
          addAdvSpinnerStateBuilding, addAdvSpinnerSwap, addAdvSpinnerTown,
          addAdvSpinnerUsingStatus, addAdvSpinnerWarmType, addAdvTextAddress, addAdvTextAdvStatus,
          addAdvTextBuildAge, addAdvTextBuildType, addAdvTextBuildingFloors, addAdvTextCity,
          addAdvTextDate, addAdvTextDues, addAdvTextElgForCredit, addAdvTextFloorLoc,
          addAdvTextFront, addAdvTextFuelType, addAdvTextItemStatus, addAdvTextNumOfBath,
          addAdvTextPrice, addAdvTextRentalIncome, addAdvTextRoomNum, addAdvTextSquareMeter,
          addAdvTextStateBuilding, addAdvTextSwap, addAdvTextTown, addAdvTextUsingStatus,
          addAdvTextWarmType, addBookActivityImageViewBookImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
