// Generated by view binder compiler. Do not edit!
package com.example.ar_realestate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ar_realestate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdvDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView detailAdvAddress;

  @NonNull
  public final TextView detailAdvBuildingAge;

  @NonNull
  public final TextView detailAdvBuildingFloors;

  @NonNull
  public final TextView detailAdvBuildingType;

  @NonNull
  public final TextView detailAdvDate;

  @NonNull
  public final TextView detailAdvDues;

  @NonNull
  public final TextView detailAdvElgCredit;

  @NonNull
  public final TextView detailAdvFloorLoc;

  @NonNull
  public final TextView detailAdvFront;

  @NonNull
  public final TextView detailAdvFuelType;

  @NonNull
  public final ImageView detailAdvImage;

  @NonNull
  public final TextView detailAdvItemStatus;

  @NonNull
  public final TextView detailAdvNumOfBathr;

  @NonNull
  public final TextView detailAdvPrice;

  @NonNull
  public final TextView detailAdvRentalIncome;

  @NonNull
  public final TextView detailAdvRoomNum;

  @NonNull
  public final TextView detailAdvSquareMeter;

  @NonNull
  public final TextView detailAdvStateOfBuilding;

  @NonNull
  public final TextView detailAdvStatus;

  @NonNull
  public final TextView detailAdvSwap;

  @NonNull
  public final TextView detailAdvTitle;

  @NonNull
  public final TextView detailAdvUsingStatus;

  @NonNull
  public final TextView detailAdvWarmType;

  private ActivityAdvDetailBinding(@NonNull ScrollView rootView, @NonNull TextView detailAdvAddress,
      @NonNull TextView detailAdvBuildingAge, @NonNull TextView detailAdvBuildingFloors,
      @NonNull TextView detailAdvBuildingType, @NonNull TextView detailAdvDate,
      @NonNull TextView detailAdvDues, @NonNull TextView detailAdvElgCredit,
      @NonNull TextView detailAdvFloorLoc, @NonNull TextView detailAdvFront,
      @NonNull TextView detailAdvFuelType, @NonNull ImageView detailAdvImage,
      @NonNull TextView detailAdvItemStatus, @NonNull TextView detailAdvNumOfBathr,
      @NonNull TextView detailAdvPrice, @NonNull TextView detailAdvRentalIncome,
      @NonNull TextView detailAdvRoomNum, @NonNull TextView detailAdvSquareMeter,
      @NonNull TextView detailAdvStateOfBuilding, @NonNull TextView detailAdvStatus,
      @NonNull TextView detailAdvSwap, @NonNull TextView detailAdvTitle,
      @NonNull TextView detailAdvUsingStatus, @NonNull TextView detailAdvWarmType) {
    this.rootView = rootView;
    this.detailAdvAddress = detailAdvAddress;
    this.detailAdvBuildingAge = detailAdvBuildingAge;
    this.detailAdvBuildingFloors = detailAdvBuildingFloors;
    this.detailAdvBuildingType = detailAdvBuildingType;
    this.detailAdvDate = detailAdvDate;
    this.detailAdvDues = detailAdvDues;
    this.detailAdvElgCredit = detailAdvElgCredit;
    this.detailAdvFloorLoc = detailAdvFloorLoc;
    this.detailAdvFront = detailAdvFront;
    this.detailAdvFuelType = detailAdvFuelType;
    this.detailAdvImage = detailAdvImage;
    this.detailAdvItemStatus = detailAdvItemStatus;
    this.detailAdvNumOfBathr = detailAdvNumOfBathr;
    this.detailAdvPrice = detailAdvPrice;
    this.detailAdvRentalIncome = detailAdvRentalIncome;
    this.detailAdvRoomNum = detailAdvRoomNum;
    this.detailAdvSquareMeter = detailAdvSquareMeter;
    this.detailAdvStateOfBuilding = detailAdvStateOfBuilding;
    this.detailAdvStatus = detailAdvStatus;
    this.detailAdvSwap = detailAdvSwap;
    this.detailAdvTitle = detailAdvTitle;
    this.detailAdvUsingStatus = detailAdvUsingStatus;
    this.detailAdvWarmType = detailAdvWarmType;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdvDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdvDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_adv_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdvDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_AdvAddress;
      TextView detailAdvAddress = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvAddress == null) {
        break missingId;
      }

      id = R.id.detail_AdvBuildingAge;
      TextView detailAdvBuildingAge = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvBuildingAge == null) {
        break missingId;
      }

      id = R.id.detail_AdvBuildingFloors;
      TextView detailAdvBuildingFloors = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvBuildingFloors == null) {
        break missingId;
      }

      id = R.id.detail_AdvBuildingType;
      TextView detailAdvBuildingType = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvBuildingType == null) {
        break missingId;
      }

      id = R.id.detail_AdvDate;
      TextView detailAdvDate = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvDate == null) {
        break missingId;
      }

      id = R.id.detail_AdvDues;
      TextView detailAdvDues = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvDues == null) {
        break missingId;
      }

      id = R.id.detail_AdvElgCredit;
      TextView detailAdvElgCredit = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvElgCredit == null) {
        break missingId;
      }

      id = R.id.detail_AdvFloorLoc;
      TextView detailAdvFloorLoc = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvFloorLoc == null) {
        break missingId;
      }

      id = R.id.detail_AdvFront;
      TextView detailAdvFront = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvFront == null) {
        break missingId;
      }

      id = R.id.detail_AdvFuelType;
      TextView detailAdvFuelType = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvFuelType == null) {
        break missingId;
      }

      id = R.id.detail_AdvImage;
      ImageView detailAdvImage = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvImage == null) {
        break missingId;
      }

      id = R.id.detail_AdvItemStatus;
      TextView detailAdvItemStatus = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvItemStatus == null) {
        break missingId;
      }

      id = R.id.detail_AdvNumOfBathr;
      TextView detailAdvNumOfBathr = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvNumOfBathr == null) {
        break missingId;
      }

      id = R.id.detail_AdvPrice;
      TextView detailAdvPrice = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvPrice == null) {
        break missingId;
      }

      id = R.id.detail_AdvRentalIncome;
      TextView detailAdvRentalIncome = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvRentalIncome == null) {
        break missingId;
      }

      id = R.id.detail_AdvRoomNum;
      TextView detailAdvRoomNum = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvRoomNum == null) {
        break missingId;
      }

      id = R.id.detail_AdvSquareMeter;
      TextView detailAdvSquareMeter = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvSquareMeter == null) {
        break missingId;
      }

      id = R.id.detail_AdvStateOfBuilding;
      TextView detailAdvStateOfBuilding = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvStateOfBuilding == null) {
        break missingId;
      }

      id = R.id.detail_AdvStatus;
      TextView detailAdvStatus = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvStatus == null) {
        break missingId;
      }

      id = R.id.detail_AdvSwap;
      TextView detailAdvSwap = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvSwap == null) {
        break missingId;
      }

      id = R.id.detail_AdvTitle;
      TextView detailAdvTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvTitle == null) {
        break missingId;
      }

      id = R.id.detail_AdvUsingStatus;
      TextView detailAdvUsingStatus = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvUsingStatus == null) {
        break missingId;
      }

      id = R.id.detail_AdvWarmType;
      TextView detailAdvWarmType = ViewBindings.findChildViewById(rootView, id);
      if (detailAdvWarmType == null) {
        break missingId;
      }

      return new ActivityAdvDetailBinding((ScrollView) rootView, detailAdvAddress,
          detailAdvBuildingAge, detailAdvBuildingFloors, detailAdvBuildingType, detailAdvDate,
          detailAdvDues, detailAdvElgCredit, detailAdvFloorLoc, detailAdvFront, detailAdvFuelType,
          detailAdvImage, detailAdvItemStatus, detailAdvNumOfBathr, detailAdvPrice,
          detailAdvRentalIncome, detailAdvRoomNum, detailAdvSquareMeter, detailAdvStateOfBuilding,
          detailAdvStatus, detailAdvSwap, detailAdvTitle, detailAdvUsingStatus, detailAdvWarmType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
