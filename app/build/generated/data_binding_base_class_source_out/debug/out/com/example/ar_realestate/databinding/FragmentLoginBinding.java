// Generated by view binder compiler. Do not edit!
package com.example.ar_realestate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ar_realestate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonSignUp;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final EditText inputUserMail;

  @NonNull
  public final TextView signUp;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView userMail;

  @NonNull
  public final TextView userPassword;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonLogin,
      @NonNull Button buttonSignUp, @NonNull EditText inputPassword,
      @NonNull EditText inputUserMail, @NonNull TextView signUp, @NonNull TextView textView,
      @NonNull TextView userMail, @NonNull TextView userPassword) {
    this.rootView = rootView;
    this.buttonLogin = buttonLogin;
    this.buttonSignUp = buttonSignUp;
    this.inputPassword = inputPassword;
    this.inputUserMail = inputUserMail;
    this.signUp = signUp;
    this.textView = textView;
    this.userMail = userMail;
    this.userPassword = userPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogin;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.buttonSignUp;
      Button buttonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUp == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      EditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.inputUserMail;
      EditText inputUserMail = ViewBindings.findChildViewById(rootView, id);
      if (inputUserMail == null) {
        break missingId;
      }

      id = R.id.signUp;
      TextView signUp = ViewBindings.findChildViewById(rootView, id);
      if (signUp == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.userMail;
      TextView userMail = ViewBindings.findChildViewById(rootView, id);
      if (userMail == null) {
        break missingId;
      }

      id = R.id.userPassword;
      TextView userPassword = ViewBindings.findChildViewById(rootView, id);
      if (userPassword == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, buttonLogin, buttonSignUp,
          inputPassword, inputUserMail, signUp, textView, userMail, userPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
