// Generated by view binder compiler. Do not edit!
package com.example.ar_realestate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ar_realestate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyaccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button exitAccount;

  @NonNull
  public final Button myAdv;

  @NonNull
  public final Button myFav;

  @NonNull
  public final Button myInfo;

  @NonNull
  public final Button mySpecialAdv;

  @NonNull
  public final TextView textNotifications;

  private FragmentMyaccountBinding(@NonNull ConstraintLayout rootView, @NonNull Button exitAccount,
      @NonNull Button myAdv, @NonNull Button myFav, @NonNull Button myInfo,
      @NonNull Button mySpecialAdv, @NonNull TextView textNotifications) {
    this.rootView = rootView;
    this.exitAccount = exitAccount;
    this.myAdv = myAdv;
    this.myFav = myFav;
    this.myInfo = myInfo;
    this.mySpecialAdv = mySpecialAdv;
    this.textNotifications = textNotifications;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyaccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyaccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_myaccount, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyaccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.exitAccount;
      Button exitAccount = ViewBindings.findChildViewById(rootView, id);
      if (exitAccount == null) {
        break missingId;
      }

      id = R.id.myAdv;
      Button myAdv = ViewBindings.findChildViewById(rootView, id);
      if (myAdv == null) {
        break missingId;
      }

      id = R.id.myFav;
      Button myFav = ViewBindings.findChildViewById(rootView, id);
      if (myFav == null) {
        break missingId;
      }

      id = R.id.myInfo;
      Button myInfo = ViewBindings.findChildViewById(rootView, id);
      if (myInfo == null) {
        break missingId;
      }

      id = R.id.mySpecialAdv;
      Button mySpecialAdv = ViewBindings.findChildViewById(rootView, id);
      if (mySpecialAdv == null) {
        break missingId;
      }

      id = R.id.text_notifications;
      TextView textNotifications = ViewBindings.findChildViewById(rootView, id);
      if (textNotifications == null) {
        break missingId;
      }

      return new FragmentMyaccountBinding((ConstraintLayout) rootView, exitAccount, myAdv, myFav,
          myInfo, mySpecialAdv, textNotifications);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
